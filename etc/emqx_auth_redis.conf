##--------------------------------------------------------------------
## Redis Auth/ACL Plugin
##--------------------------------------------------------------------
## Redis Server cluster type
## single    Single redis server
## sentinel  Redis cluster through sentinel
## cluster   Redis through cluster
auth.redis.type = single

## Redis server address.
##
## Value: Port | IP:Port
##
## Single Redis Server: 127.0.0.1:6379, localhost:6379
## Redis Sentinel: 127.0.0.1:26379,127.0.0.2:26379,127.0.0.3:26379
## Redis Cluster: 127.0.0.1:6379,127.0.0.2:6379,127.0.0.3:6379
auth.redis.server = x.x.x.x:x

## Redis sentinel cluster name.
##
## Value: String
## auth.redis.sentinel = mymaster

## Redis pool size.
##
## Value: Number
auth.redis.pool = 8

## Redis database no.
##
## Value: Number
auth.redis.database = 5

## Redis password.
##
## Value: String
auth.redis.password = xxxx

## Redis query timeout
##
## Value: Duration
auth.redis.query_timeout = 5s

## Authentication query command.
##
## Value: Redis cmd
##
## Variables:
##  - %u: username
##  - %c: clientid
##  - %C: common name of client TLS cert
##  - %d: subject of client TLS cert
##
## Examples:
##  - HGET mqtt_user:%u password
##  - HMGET mqtt_user:%u password
##  - HMGET mqtt_user:%u password salt
auth.redis.auth_cmd = HMGET mqtt_user:%u password

## Password hash.
##
## Value: plain | md5 | sha | sha256 | bcrypt
auth.redis.password_hash = plain

## sha256 with salt prefix
## auth.redis.password_hash = salt,sha256

## sha256 with salt suffix
## auth.redis.password_hash = sha256,salt

## bcrypt with salt prefix
## auth.redis.password_hash = salt,bcrypt

## pbkdf2 with macfun iterations dklen
## macfun: md4, md5, ripemd160, sha, sha224, sha256, sha384, sha512
## auth.redis.password_hash = pbkdf2,sha256,1000,20

## Superuser query command.
##
## Value: Redis cmd
##
## Variables:
##  - %u: username
##  - %c: clientid
##  - %C: common name of client TLS cert
##  - %d: subject of client TLS cert
auth.redis.super_cmd = HGET mqtt_user:%u is_superuser

## ACL query command.
##
## Value: Redis cmd
##
## Variables:
##  - %u: username
##  - %c: clientid
auth.redis.acl_cmd = HGETALL mqtt_acl:%u

## Redis ssl configuration.
##
## Value: on | off
#auth.redis.ssl = off

## CA certificate.
##
## Value: File
#auth.redis.cafile = path/to/your/cafile

## Client ssl certificate.
##
## Value: File
#auth.redis.certfile = path/to/your/certfile

## Client ssl keyfile.
##
## Value: File
#auth.redis.keyfile = path/to/your/keyfile

auth.redis.super_account = xxxx
auth.redis.super_password = xxxxxx

##--------------------------------------------------------------------
## WebHook
##--------------------------------------------------------------------

# ## The web services URL for Hook request
# ##
# ## Value: String
# auth.redis.url = http://x.x.x.x:x
# auth.redis.auth_path = xxx
# auth.redis.acl_path = xxx
# 
# ##--------------------------------------------------------------------
# ## HTTP Request Headers
# ##
# ## The header params what you extra need
# ## Format:
# ##    auth.redis.headers.<param> = your-param
# ## Example:
# ## 1. auth.redis.headers.token = your-token
# ## 2. auth.redis.headers.other = others-param
# ##
# ## Value: String
# auth.redis.headers.authorization = xxx
# ##--------------------------------------------------------------------
# ## Encode message payload field
# ##
# ## Value: base64 | base62
# #auth.redis.encode_payload = base64
# 
# ##--------------------------------------------------------------------
# ## CA certificate.
# ##
# ## Value: File
# #auth.redis.ssl.web_cafile  = path/to/your/ca/file
# 
# ## Client ssl certificate.
# ##
# ## Value: File
# #auth.redis.ssl.web_certfile = path/to/your/clientcert/file
# 
# ##--------------------------------------------------------------------
# ## Client ssl keyfile.
# ##
# ## Value: File
# #auth.redis.ssl.web_keyfile = path/to/your/clientkey/file
# 
# ##--------------------------------------------------------------------
# ## Pool size of HTTP connection pools.
# ##
# ## Value: Integer
# #auth.redis.web_pool_size = 32


##--------------------------------------------------------------------
##  http client
##--------------------------------------------------------------------
## Authentication request.

## HTTP URL API path for authentication request
##
## Value: URL
##
## Examples: http://127.0.0.1:80/mqtt/auth, https://[::1]:80/mqtt/auth
auth.http.auth_req = http://x.x.x.x/api/uaa/user

## Value: post | get
auth.http.auth_req.method = post

## It only works when method=post
## Value: json | x-www-form-urlencoded
auth.http.auth_req.content_type = x-www-form-urlencoded

## Variables:
##  - %u: username
##  - %c: clientid
##  - %a: ipaddress
##  - %r: protocol
##  - %P: password
##  - %p: sockport of server accepted
##  - %C: common name of client TLS cert
##  - %d: subject of client TLS cert
##
## Value: Params
auth.http.auth_req.params = username=%u,token=%P

##--------------------------------------------------------------------
## ACL request.

## HTTP URL API path for ACL request
##
## Value: URL
##
## Examples: http://127.0.0.1:80/mqtt/acl, https://[::1]:80/mqtt/acl
auth.http.acl_req = http://x.x.x.x/device/bindings

## Value: post | get
auth.http.acl_req.method = post

## It only works when method=post
## Value: json | x-www-form-urlencoded
auth.http.acl_req.content_type = x-www-form-urlencoded

## Variables:
##  - %A: 1 | 2, 1 = sub, 2 = pub
##  - %u: username
##  - %c: clientid
##  - %a: ipaddress
##  - %r: protocol
##  - %m: mountpoint
##  - %t: topic
##
## Value: Params
auth.http.acl_req.params = deviceId=%u

##------------------------------------------------------------------------------
## Http Reqeust options

## Time-out time for the http request, 0 is never timeout.
##
## Value: Duration
## -h: hour, e.g. '2h' for 2 hours
## -m: minute, e.g. '5m' for 5 minutes
## -s: second, e.g. '30s' for 30 seconds
##
## Default: 5s
## auth.http.request.timeout = 5s

## Connection time-out time, used during the initial request
## when the client is connecting to the server
##
## Value: Duration
##
## Default is same with the timeout option
## auth.http.request.connect_timeout = 5

## Re-send http reuqest times
##
## Value: integer
##
## Default: 3
auth.http.request.retry_times = 5

## The interval for re-sending the http request
##
## Value: Duration
##
## Default: 1s
auth.http.request.retry_interval = 1s

## The 'Exponential Backoff' mechanism for re-sending request. The actually
## re-send time interval is `interval * backoff ^ times`
##
## Value: float
##
## Default: 2.0
auth.http.request.retry_backoff = 2.0

##------------------------------------------------------------------------------
## SSL options

## Path to the file containing PEM-encoded CA certificates. The CA certificates
## are used during server authentication and when building the client certificate chain.
##
## Value: File
## auth.http.ssl.cacertfile = {{ platform_etc_dir }}/certs/ca.pem

## The path to a file containing the client's certificate.
##
## Value: File
## auth.http.ssl.certfile = {{ platform_etc_dir }}/certs/client-cert.pem

## Path to a file containing the client's private PEM-encoded key.
##
## Value: File
## auth.http.ssl.keyfile = {{ platform_etc_dir }}/certs/client-key.pem

##--------------------------------------------------------------------
## HTTP Request Headers
##
## Example: auth.http.header.Accept-Encoding = *
##
## Value: String
## auth.http.header.Accept = */*
